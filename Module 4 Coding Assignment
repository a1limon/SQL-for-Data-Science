#1. Pull a list of customer ids with the customer’s full name, and address, along with combining their city and country together. 
Be sure to make a space in between these two and make it UPPER CASE. (e.g. LOS ANGELES USA)

SELECT CustomerId, FirstName || " " || LastName, Address, UPPER(City || ", " || Country)
FROM Customers


------------------------------------------------------------------------------------

#2. Create a new employee user id by combining the first 4 letters of the employee’s first name with the first 2 letters of the employee’s last name. 
Make the new field lower case and pull each individual step to show your work.

SELECT LOWER(SUBSTR(FirstName, 0, 5) || SUBSTR(LastName, 0, 3)) as newEmployeeUserId
FROM Employees

------------------------------------------------------------------------------------

#3. Show a list of employees who have worked for the company for 15 or more years using the current date function. Sort by lastname ascending.

SELECT  FirstName || " " || LastName,   DATE(('now')) - HireDate as yearsWorked
FROM Employees
WHERE yearsWorked >= 15
ORDER BY LastName DESC

------------------------------------------------------------------------------------

#4. Are there any columns with null values? Indicate any below. Select all that apply.

SELECT *
FROM Customers

------------------------------------------------------------------------------------

 #5. Find the cities with the most customers and rank in descending order.

SELECT City, COUNT(CustomerId) as numCustomers
FROM Customers
GROUP BY City
ORDER BY numCustomers DESC

------------------------------------------------------------------------------------

#6. Create a new customer invoice id by combining a customer’s invoice id with their first and last name while ordering your query in the following order: firstname, lastname, and invoiceID.



SELECT c.FirstName, c.LastName, c.FirstName ||  c.LastName || i.InvoiceId as invoiceID
FROM Invoices as i LEFT JOIN Customers as c ON c.CustomerId = i.CustomerId


